import java.util.ArrayDeque;
import java.util.LinkedList;
import java.util.Scanner;

public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        for(int i=0; i<t; i++) {
            String order = sc.next();
            int n = sc.nextInt();
            String arr = sc.next();
            boolean isRight = true;
            boolean isError = false;
            ArrayDeque<Integer> deque = new ArrayDeque<>();

            arr = arr.substring(1, arr.length() - 1);
            String[] split = arr.split(",");

            for (int j = 0; j < n; j++) {
                deque.add(Integer.parseInt(split[j]));
            }

            System.out.println(solve(deque, order));
        }
    }
    private static String solve(ArrayDeque<Integer> deque, String order){
        boolean reverse = false;
        for(int i=0; i<order.length(); i++){
            if(order.charAt(i) == 'R'){
                reverse = !reverse;
            }
            else{
                if(deque.isEmpty()){
                    String result = "error";
                    return result;
                }
                if(reverse){
                    deque.removeLast();
                }
                else{
                    deque.removeFirst();
                }
            }
        }
//        if(deque.isEmpty()){
//            String result = "error";
//            return result;
//        }

        StringBuilder sb = new StringBuilder("[");
        while(!deque.isEmpty()){
            if(reverse){
                sb.append(deque.removeLast());
            }
            else{
                sb.append(deque.removeFirst());
            }
            if(!deque.isEmpty()){
                sb.append(",");
            }
        }
        sb.append("]");

        return sb.toString();
    }
}
