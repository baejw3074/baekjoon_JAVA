import java.util.Scanner;

public class Main{
    static int count;
    static StringBuilder sb = new StringBuilder();
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        dHanoi(n, 'A', 'D', 'B', 'C');
        System.out.println(count);
        System.out.println(sb);
    }
    private static void dHanoi(int n, char from, char to, char rest1, char rest2){
        if(n == 1){
            move(from, to);
            return;
        }
        else if(n == 2){
            move(from, rest2);
            move(from, to);
            move(rest2, to);
            return;
        }
        hanoi(n-2, from, rest1, rest2); // n-2개의 원판을 D가 아닌 다른 곳으로 옮기기
        move(from, rest2); // 두 번째로 큰 원판을 D가 아닌 비어있는 기둥으로 옮기기
        move(from, to); // 제일 큰 원판을 옮기기
        move(rest2, to); // 두번째로 큰 원판 옮기기
        dHanoi(n-2, rest1, to, from, rest2); // n-2개의 원판에 대해 재귀 실행
    }
    private static void move(char from, char to){
        sb.append(from).append(' ').append(to).append('\n');
        count++;
    }
    private static void hanoi(int n, char from, char to, char rest){
        if(n == 1){
            move(from, to);
            return;
        }
        hanoi(n-1, from, rest, to); // n-1개의 원판을 from에서 rest로 옮김
        hanoi(1, from, to, rest); //  가장 큰 원반을 from에서 to로 옮김
        hanoi(n-1, rest, to, from); // n-1개의 원반을 rest에서 to로 옮김
    }
}
