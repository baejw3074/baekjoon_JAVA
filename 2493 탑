import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Stack;
import java.util.StringTokenizer;

class top{
    int value;
    int index;
    top(int value, int index){
        this.index = index;
        this.value = value;
    }
}
public class Main{
    public static void main(String[] args)throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        StringBuilder sb = new StringBuilder();

        int num = Integer.parseInt(st.nextToken());
        st = new StringTokenizer(br.readLine());
        Stack<top> stack = new Stack<>();

        for(int i=1; i<=num; i++){
            int input = Integer.parseInt(st.nextToken());
            while(!stack.empty()){
                top element = stack.peek();
                if(element.value > input){
                    sb.append(element.index + " ");
                    break;
                }
                stack.pop();
            }
            if(stack.empty()){
                sb.append(0 + " ");
            }
            stack.push(new top(input, i));
        }
        System.out.println(sb.toString());
    }
}

//<다시 풀기>
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Stack;
import java.util.StringTokenizer;

public class Main{
    static int n;
    static int[] arr;
    static int[] result;
    static Stack<int[]> stack = new Stack<>();
    public static void main(String[] args)throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        n = Integer.parseInt(br.readLine());
        arr = new int[n];
        st = new StringTokenizer(br.readLine());
        for(int i=0; i<n; i++){
            arr[i] = Integer.parseInt(st.nextToken());
        }
        result = new int[n];
        stack.push(new int[] {arr[0], 1});
        for(int i=1; i<n; i++){
            if(stack.peek()[0] > arr[i]){
                result[i] = stack.peek()[1];
                stack.push(new int[] {arr[i], i+1});
            }
            else{
                while(!stack.isEmpty()){
                    if(stack.peek()[0] < arr[i]){
                        stack.pop();
                    }
                    else{
                        result[i] = stack.peek()[1];
                        stack.push(new int[] {arr[i], i+1});
                        break;
                    }
                }
                if(stack.isEmpty()){
                    stack.push(new int[] {arr[i], i+1});
                    result[i] = 0;
                }
            }
        }
        for(int i=0; i<n; i++){
            System.out.print(result[i] +" ");
        }
    }
}
