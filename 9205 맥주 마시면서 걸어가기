import org.w3c.dom.html.HTMLLinkElement;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
class festival{
    int x;
    int y;
    public festival(int x, int y){
        this.x = x;
        this.y = y;
    }
}
public class Main {
    static int[][] arr;
    static int n;
    static boolean[] visit;
    static boolean flag;
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        for(int i=0; i<t; i++){
            n = sc.nextInt();
            arr = new int[n+2][2];
            visit = new boolean[n+2];
            for(int j=0; j<n+2; j++){
                arr[j][0] = sc.nextInt();
                arr[j][1] = sc.nextInt();
            }
            flag = false;
            bfs(0);

            if(flag){
                System.out.println("happy");
            }
            else{
                System.out.println("sad");
            }
        }
    }
    private static void bfs(int k){
        Queue<festival> q = new LinkedList<>();
        q.add(new festival(arr[k][0], arr[k][1]));
        visit[k] = true;
        while(!q.isEmpty()){
            festival current = q.poll();
            if(Math.abs(arr[n+1][0] - current.x) + Math.abs(arr[n+1][1] - current.y) <= 1000){
                flag = true;
            }
            for(int i=0; i<n+2; i++){
                if(!visit[i]){
                    int nx = arr[i][0];
                    int ny = arr[i][1];
                    if(Math.abs(nx - current.x) + Math.abs(ny - current.y)<=1000){
                        visit[i] = true;
                        q.add(new festival(nx, ny));
                    }
                }
            }
        }
    }
}
