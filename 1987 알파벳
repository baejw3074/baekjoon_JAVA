import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main_알파벳 {
    static int r;
    static int c;
    static int[][] arr;
    static boolean[] visit = new boolean[26];
    static int[] dr = {-1, 1, 0, 0};
    static int[] dc = {0, 0, -1, 1};
    static int result=0;
    public static void main(String[] args)throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        r = Integer.parseInt(st.nextToken());
        c = Integer.parseInt(st.nextToken());
        arr = new int[r][c];

        for(int i=0; i<r; i++){
            String str = br.readLine();
            for(int j=0; j<c; j++){
                arr[i][j] = str.charAt(j) - 'A';
            }
        }
        solve(0, 0, 0);
        System.out.println(result);
    }
    public static void solve(int x, int y, int count){
        if(visit[arr[x][y]]){
            result = Math.max(result, count);
            return;
        }
        else{
            visit[arr[x][y]] = true;
            for(int i=0; i<4; i++){
                int dx = x + dr[i];
                int dy = y + dc[i];

                if(dx >=0 && dy >= 0 && dx<r && dy<c){
                    solve(dx, dy, count+1);
                }
            }
            visit[arr[x][y]] = false;
        }
    }
}
