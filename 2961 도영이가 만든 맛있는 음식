import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Solving {
    static int[][] input;
    static int t;
    static boolean[] isSelected;

    static int min = Integer.MAX_VALUE;
    public static int solve(int count){
        if(count == t){
            int sour = 1;
            int bitter = 0;
            int temp = 0;
            for(int i=0; i<t; i++){
                if(isSelected[i]){
                    sour = sour * input[i][0];
                    bitter = bitter + input[i][1];
                    temp +=1;
                }
            }
            if(temp >0){
                min = Math.min(min, Math.abs(sour - bitter));

            }
            return min;
        }

        isSelected[count] = true; // 재귀
        solve(count+1);
        isSelected[count] = false;
        solve(count+1);
        return min;
    }
    public static void main(String[] args)throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        t = Integer.parseInt(st.nextToken());
        input = new int[t][2];
        isSelected = new boolean[t];
        for(int i=0; i<t; i++){
            st = new StringTokenizer(br.readLine());
            for(int j=0; j<2; j++) {
                input[i][j] = Integer.parseInt(st.nextToken()); // 입력 받기
            }
        }
        solve(0);
        System.out.println(min);

    }
}
