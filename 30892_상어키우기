import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        long N = Long.parseLong(st.nextToken());
        long K = Long.parseLong(st.nextToken());
        long T = Long.parseLong(st.nextToken());

        long[] arr = new long[(int) N];
        st = new StringTokenizer(br.readLine());
        for (int i = 0; i < N; i++) {
            arr[i] = Long.parseLong(st.nextToken());
        }

        Arrays.sort(arr);

        Stack<Long> smaller = new Stack<>();
        Queue<Long> bigger = new LinkedList<>();

        for (int i = 0; i < N; i++) {
            if (arr[i] < T) {
                smaller.push(arr[i]);
            } else {
                bigger.offer(arr[i]);
            }
        }

        for (int i = 0; i < K; i++) {
            if (smaller.isEmpty()) break;

            long current = smaller.pop();
            T += current;

            while (!bigger.isEmpty() && T > bigger.peek()) {
                smaller.push(bigger.poll());
            }
        }

        System.out.println(T);
    }
}
